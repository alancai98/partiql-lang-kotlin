name: Conformance Test Report Generation
on: [push, pull_request]

env:
  ARGS: ./conformance_test_results.ion ${GITHUB_WORKSPACE}/main/test/partiql-tests-runner/conformance_test_results.ion ${GITHUB_SHA} ${GITHUB_SHA} ./comparison_report.md

jobs:
  conformance-report:
    name: Create conformance report for `push` and `pull_request` events
    runs-on: ubuntu-latest
    steps:
      - name: print env
        run: echo $ARGS
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Use Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 17
          cache: gradle
      # Run the conformance tests (i.e. `gradle test`) and save to an Ion file.
      - name: gradle test of the conformance tests (can fail) and save to Ion file
        continue-on-error: true
        run: gradle :test:partiql-tests-runner:test -PconformanceReport
      # Upload conformance report for comparison with future runs
      - name: Upload `conformance_test_results.ion`
        uses: actions/upload-artifact@v3
        with:
          path: ./test/partiql-tests-runner/conformance_test_results.ion
      # Cache the conformance report for `conformance-report-comparison` job (pull_request event only)
      - name: Cache conformance report
        if: github.event_name == 'pull_request'
        uses: actions/cache@v3
        id: restore-build-and-conformance
        with:
          path: ./*
          key: ${{ github.sha }}-conformance-report
  conformance-report-comparison:
    name: Create comparison report for `pull_request` event
    runs-on: ubuntu-latest
    needs: [ conformance-report ]
    if: github.event_name == 'pull_request'
    steps:
      # Pull down cached `cargo build` and conformance report
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions/cache@v3
        id: restore-build-and-conformance
        with:
          path: ./*
          key: ${{ github.sha }}-conformance-report
      - name: Use Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 17
          cache: gradle
#      # Download conformance report from `main` to create comparison report. If `main` has no report, use a backup
#      # report (stored in partiql-conformance-tests/backup_conformance_report.json). Alternatively, we could consider
#      # - pulling `main` branch and rerun the tests
#      # - pulling latest release and rerun the tests
#      # - compare to an empty file
#      # - don't perform comparisons
#      - name: Download conformance_test_results.ion from `main` branch
#        uses: dawidd6/action-download-artifact@v2
#        id: download-report
#        continue-on-error: true
#        with:
#          workflow: conformance-report.yml
#          branch: main
#      - name: backup case if download fails
#        if: ${{ steps.download-report.outcome == 'failure' }}
#        run: mkdir -p artifact && cp -r ./partiql-conformance-tests/backup_conformance_report.json ./artifact/conformance_test_results_new.ion
      #- name: Create dir
      #  run: mkdir -p main
      #- name: cd dir
      #  run: cd main
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          path: main
          ref: main
      - name: cd main
        run: cd main
      # Run the conformance tests (i.e. `gradle test`) and save to an Ion file.
      - name: gradle test of the conformance tests (can fail) and save to Ion file
        continue-on-error: true
        run: gradle :test:partiql-tests-runner:test -PconformanceReport
      - name: cd out of main/partiql/lang-kotlin
        run: cd ../
      # Run conformance report comparison. Generates `comparison_report.md`
      - run: gradle :test:partiql-tests-runner:run --args=$ARGS
      # Print conformance report to GitHub actions workflow summary page
      - name: print markdown in run
        run: cat ./test/partiql-tests-runner/comparison_report.md >> $GITHUB_STEP_SUMMARY
      # Find comment w/ conformance comparison if previous comment published
      - name: Find Comment
        uses: peter-evans/find-comment@v2
        continue-on-error: true
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'Conformance Comparison Report[bot]'
          body-includes: Conformance
      # Create or update (if previous comment exists) with markdown version of comparison report
      - name: Create or update comment
        continue-on-error: true
        uses: peter-evans/create-or-update-comment@v2
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body-file: ./test/partiql-tests-runner/comparison_report.md
          edit-mode: replace
